<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android">
    <TextView 
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="@string/hello_world"
        />
    <EditText
        android:hint="@string/test_ts"   
        android:inputType="text"
        android:id="@+id/EditText1"
        android:layout_width="80dp"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        />
    <Button
        android:id="@+id/btn1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/hello_world"
        />
    <ImageButton 
        android:contentDescription="@string/test_ms"
        />
    <ImageView
        android:contentDescription="@string/test_ms"
        android:id="@+id/imageview1"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_launcher"
        android:layout_gravity="center"
        />
    <ProgressBar 
        android:id="@+id/progressbar1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="gone"
        />
    <RadioGroup 
        android:id="@+id/radiogroup1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        >
        <RadioButton 
	        android:id="@+id/radiobutton1"
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content"
	        android:text="@string/male"
            />
        <RadioButton 
	        android:id="@+id/radiobutton2"
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content"
	        android:text="@string/female"
            />
    </RadioGroup>
    <CheckBox 
	    android:id="@+id/check1"
	    android:layout_width="wrap_content"
	    android:layout_height="wrap_content"
	    android:text="@string/check1"
        />
    <Spinner 
	    android:id="@+id/spinner1"
	    android:layout_width="fill_parent"
	    android:layout_height="wrap_content"
        />
    <ListView 
	    android:id="@+id/listview1"
	    android:layout_width="wrap_content"
	    android:layout_height="wrap_content"
        />
    <!-- 智能提示 -->
    <AutoCompleteTextView 
	    android:id="@+id/autoComplete1"
	    android:layout_width="fill_parent"
	    android:layout_height="wrap_content"
        />
    <ToggleButton 
	    android:id="@+id/tb1"
	    android:layout_width="fill_parent"
	    android:layout_height="wrap_content"
	    android:textOn="@string/on"
	    android:textOff="@string/off"
        />
    
    
    <!-- 自定义View -->
    
</LinearLayout>


    
      <!--  AbsoluteLayout支持的属性
        android:layout_x="0dp"   //支持dp/dip
        android:layout_y="52dp"
        
        
        
        
        
        EditText:必备属性android:hint/android:inputType
        ImageButton:必备属性 android:contentDescription不允许为空
        ImageView:必备属性 android:contentDescription不允许为空
        
        
        
        
        
        
        
        spinner使用方式
        //将可选内容与ArrayAdapter连接起来
        adapter=new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,m);
        //设置下拉列表的风格
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_item);
        //将adapter添加到spinner中
        spinner.setAdapter(adapter);
        //添加事件Spinner事件监听
        spinner.setOnItemSelectedListener(new SpinnerSelectedListener());
        
       	智能提示 AutoCompleteTextView 的使用方式
       	//创建一个ArrayAdapter
       	ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_dropdown_item_1line,COUNTRIES)
        //获取AutoCompleteTextView对象
        AutoCompleteTextView autoComplete=(AutoCompleteTextView) findViewById(R.id.autoComplete);
        //将AutoCompleteTextView与ArrayAdapter进行绑定
        autoComplete.setAdapter(adapter);
        //设置AutoCompleteTextView输入1个字符就进行提示
        autoComplete.setThreshold(1);
        
        
        
        
        Activity之间的跳转并传值
        Intent i = new Intent();
        i.setClass(Activity1.this,result.class);
        //Bundle对象
        Bundle b = new Bundle();
        b.putDouble("hi",hight);//传double类型的参数
        b.putExtras(b);
        //无返回值
        Activity1.this.startActivity(i);
        
        Intent ii = new Intent();
        ii.putExtras("name","name");
        ii.setClass(Activity1.this,Activity2.class);
        //有返回值的
        Activity1.this.startActivity(ii,0);
        
        
        
        Menu菜单
        //添加菜单Menu选项
        public boolean onCreateOptionsMenu(Menu menu){
        	menu.add(0,1,1,"现在几点了？");
        	menu.add(0,2,2,"退出");
        	menu.add(0,3,3,"返回");
        	return super.onCreateOptionsMenu(menu);        
        }
        //点击菜单选项后的事件
        public boolean onOptionsItemSelected(MenuItem menu){
        	if(item.getItemId() == 1){}
        	return super.onOptionsItemSelected(item);        
        }
        //带图片的Menu
        public boolean onCreateOptionsMenu(Menu menu){
        	super.onCreateOptionsMenu(menu);  
        	menu.add(0,1,0,"重新开始").setIcon(R.drawable.refresh);
        	menu.add(0,2,0,"游戏指南").setIcon(R.drawable.help);
        	menu.add(0,3,0,"关于游戏").setIcon(R.drawable.info);   
        	menu.add(0,3,0,"退出游戏").setIcon(R.drawable.exit);   
        	return true;   
        }
        
        
        
        
        //常见布局
        FrameLayout(框架布局)
        LinearLayout(线性布局)
        AbsoluteLayout(绝对布局)
        RalativeLayout(相对布局)
        TableLayout(表格布局)
        
        
        
        //弹框
        Toast.makeText(FileTest.this,'aaaaa',1).show();
        
        //new AlertDialog.Builder(context)
        AlertDialog.Builder ac = new AlertDialog.Builder(AccoutList.this);
        ac.setTitle("");
        ac.setMessage("");
        ac.setPositiveButton("确定",
       		new android.content.DialogInterface.OnClickListener(){
       			@Override
       			public void onClick(DialogInterface dialog , int which){
       				dialog.dismiss();
       				//AccoutList.this.finish();
       				//System.exit(1);
       				//关闭当前的 Activity
       				android.os.Process.killProcess(android.os.Process.MyPid());
       			}
       		}
        );
        ac.setNagativeButton("取消",
       		new android.content.DialogInterface.OnClickListener(){
       			@Override
       			public void onClick(DialogInterface dialog , int which){
       				dialog.dismiss();
       			}
       		}
        );
        ac.create().show();
        
        
        
        
        Handler使用
        //Runnable创建进度条的管理机制
        private Handler h=new Handler();
        //起始一个运行的进程
        Runnable r=new Runnable({
	        public void run(){
	        	System.out.println("");
	        	//延时加载
	        	h.postDelayed(r,500);
	        }
        });
        //开始的监听
        class startBtn implements OnClickListener{
        	public void onClick(View v){
        		h.post(r)
        	}
        }
        //结束按钮的监听
        class stopBtn implements OnClickListener{
        	public void onClick(View v){
        		h.removeCallbacks(r)
        	}
        }
        
        
        
        
        
        
        
        
        
        SharedPrefrences存储到XML
        //存储的XML文件名
        private final String PREFERENCE_NAME = "name";
        //获取SharedPrefrences对象,第一个参数:XML文件名,第二个参数:范围
        SharedPrefrences mySharedPrefrences = getSharedPrefrences(PREFERENCE_NAME,Activity.MODE_PRIVATE);
        //编辑XML文件
        SharedPrefrences.Editor editor = mySharedPrefrences.edit();
        editor.putString("key","value");
        editor.commit();
        
        
        
        
        
        
        Toast显示一个ImageView
        /*设置主屏布局*/
		setContentView(R.layout.main);
		/*创建新Toast对象*/
		Toast showImageToast=new Toast(this);
		/*创建新ImageView对象*/
		ImageView imageView=new ImageView(this);
		/*从资源中获取图片*/
		imageView.setImageResource(R.drawable.argon);
		/*设置Toast上的View (ImageView)*/
		showImageToast.setView(imageView);
		/*设置Toast显示时间*/
		showImageToast.setDuration(Toast.LENGTH_LONG);
		/*显示Toast*/
		showImageToast.show();
		 
		Toast显示一个Button       
        Button button = new Button(this);
		button.setText("OK");
		/*设置Toast上的View(Button)*/
		showImageToast.setView(button);
        
        
        Toast显示一个TextView 
        /*新建TextView对象*/
		TextView text=new TextView(this);
		/*设置TextView内容*/
		text.setText("显示在Toast中的TextView");
		/*设置Toast上的View(TextView) */
		showImageToast.setView(text);
        
        
        
        AlertDialog.Builder提示对话框
        /*设置主屏布局*/
		setContentView(R.layout.main);
		/*新建一个AlertDialog.Builder对象*/
		AlertDialog.Builder my_ADialog =new AlertDialog.Builder(this);
		/*设置标题*/
		my_ADialog.setTitle("Android提示");
		/*设置显示消息*/
		my_ADialog.setMessage("AlertDialog.Builder提示对话框消息!!");
		/*显示*/
		my_ADialog.show();
        
        
        
        
        
		 应用SDCard
		①打开CMD
		②进入C:\DocumentsandSettings\地狱怒兽\Local Settings\ApplicationData\Android\SDK-1.1目录
		③创建sdcard镜像mksdcard256M./sdcard.img
		④往SDCard中添加资源：adbpushzyf.mp3/sdcard/zyf.mp3
		⑤往SDCard中获取资源：adbpull/sdcard/mybaby.jpgC:\
		⑥重启模拟器后，文件即在虚拟SDCard中
		
		向模拟器安装APK软件包
		①打开cmd
		②切换到AndroidSDKtools目录下
		③把APK软件包复制到AndroidSDKtools目录下
		④adbinstallSnake.pak
		
		删除模拟器中APK软件包
		①打开模拟器
		②打开cmd
		③adbshell
		④cddata/app
		⑤ls-l
		⑥rm 文件名.apk
        
        
        
        
        
       -->
